!function(){function n(n,t,a,s,e,o,c){try{var i=n[o](c),r=i.value}catch(n){return void a(n)}i.done?t(r):Promise.resolve(r).then(s,e)}document.getElementById("natura11yIconGrid"),document.getElementById("natura11yIconList");var t=[],a=function(){var a,e=(a=regeneratorRuntime.mark((function n(){var a,e;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,fetch("https://i.icomoon.io/public/395bc97f45/Natura11yIcons/selection.json");case 3:return a=n.sent,n.next=6,a.json();case 6:e=n.sent,t=e.icons,s(t),n.next=14;break;case 11:n.prev=11,n.t0=n.catch(0),console.error(n.t0);case 14:case"end":return n.stop()}}),n,null,[[0,11]])})),function(){var t=this,s=arguments;return new Promise((function(e,o){var c=a.apply(t,s);function i(t){n(c,e,o,i,r,"next",t)}function r(t){n(c,e,o,i,r,"throw",t)}i(void 0)}))});return function(){return e.apply(this,arguments)}}(),s=function(n){var t=n.map((function(n){var t=n.properties.name;return n.icon.tags,'\n        <div class="grid__cell">\n\n            <div class="aspect-ratio aspect-ratio--1by1 margin-bottom-1">\n                <div class="aspect-ratio__content display-flex justify-content-center align-items-center border border-radius ">\n                    <span class="icon_'.concat(t,'" style="font-size: 2em !important;"></span>   \n                </div>\n            </div>\n        \n            <p class="font-size-sm">\n                ').concat(t,"\n            </p>\n\n        </div>")})).join(""),a=n.map((function(n,t){var a=n.properties.name,s=n.icon.tags,e='\n            <span class="token tag">\n                <span class="token tag"><span class="token punctuation">&lt;</span>span </span>\n                <span class="token attr-name">class</span>\n                <span class="token attr-value">\n                    <span class="token punctuation attr-equals">=</span>\n                    <span class="token punctuation">"</span>\n                    icon_'.concat(a,'\n                    <span class="token punctuation">" </span>\n                </span>\n                <span class="token attr-name">aria-hidden</span>\n                <span class="token attr-value">\n                    <span class="token punctuation attr-equals">=</span>\n                    <span class="token punctuation">"</span>\n                    true\n                    <span class="token punctuation">"</span>\n                </span>\n                <span class="token punctuation">&gt;</span>\n            </span>\n            <span class="token tag">\n                <span class="token tag">\n                    <span class="token punctuation">&lt;/</span>span\n                </span>\n                <span class="token punctuation">&gt;</span>\n            </span>');return'           \n            <div class="display-flex align-items-stretch theme-dark border-top">\n\n                <div class="display-flex width-25 border-right padding-2">\n                    <div class="margin-y-auto text-align-center width-100">\n                        <span class="icon_'.concat(a,' display-inline-block" style="font-size: 1.5em !important;"></span>\n                    </div>\n                </div>\n\n                <div class="width-75 padding-3">\n                    <p class="font-size-md margin-bottom-1">\n                        Class: ').concat(a,'\n                    </p>\n                    <p class="font-size-sm opacity-80 margin-bottom-1">\n                        Tags: ').concat(s.map((function(n){return n.replace(",","")})).join(", "),'</p>\n                    <div class="font-size-md">\n                        ').concat(e.split("\n").map((function(n){return n.trim()})).join(""),"\n                    </div>\n                </div>\n\n            </div>")})).join("");natura11yIconGrid.innerHTML=t,natura11yIconList.innerHTML=a};a(),document.getElementById("core-icon-search").addEventListener("keyup",(function(n){var a=n.target.value.toLowerCase(),e=t.filter((function(n){return n.properties.name.toLowerCase().includes(a)||n.icon.tags.toString().includes(a)}));s(e)}))}();